{"version":3,"sources":["../../../src/basic/Actionsheet.js"],"names":["ActionSheetContainer","props","state","modalVisible","items","config","callback","OS","options","filtered","map","item","text","showActionSheetWithOptions","setState","title","message","destructiveButtonIndex","cancelButtonIndex","autoHide","duration","console","warn","backgroundColor","flex","justifyContent","height","length","padding","elevation","color","marginHorizontal","marginTop","data","i","id","borderColor","icon","actionsheetInstance","_root","showActionSheet","propTypes","style","PropTypes","object","StyledActionSheetContainer"],"mappings":"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","file":"Actionsheet.js","sourcesContent":["/* @flow */\n\n\nimport React, { Component } from 'react';\nimport { View, Modal, Platform, ActionSheetIOS, TouchableOpacity, ViewPropTypes } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport { Text } from './Text';\nimport { Button } from './Button';\nimport { ViewNB } from './View';\nimport { Icon } from './Icon';\nimport { Left } from './Left';\nimport { Right } from './Right';\nimport { Body } from './Body';\nimport { List } from './List';\nimport { ListItem } from './ListItem';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\n\nclass ActionSheetContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      items: [],\n    }\n  }\n  static actionsheetInstance;\n  static show(config, callback) {\n    this.actionsheetInstance._root.showActionSheet(config, callback);\n  }\n  showActionSheet(config, callback) {\n    if (Platform.OS==='ios') {\n      if (typeof config.options [0]=='object') {\n        let options = config.options;\n        let filtered = options.map((item) => {\n          return item.text\n        });\n        config.options = filtered;\n        ActionSheetIOS.showActionSheetWithOptions(config, callback);\n      }\n      else {\n        ActionSheetIOS.showActionSheetWithOptions(config, callback);\n      }\n    }\n    else {\n      this.setState({\n        items: config.options,\n        title: config.title,\n        message: config.message,\n        destructiveButtonIndex: config.destructiveButtonIndex,\n        cancelButtonIndex: config.cancelButtonIndex,\n        modalVisible: true,\n        callback: callback\n      });\n    }\n  }\n  componentDidMount() {\n    if (!this.props.autoHide && this.props.duration) {\n      console.warn(`It's not recommended to set autoHide false with duration`);\n    }\n  }\n  render() {\n    return (\n      <Modal\n        animationType={\"fade\"}\n        transparent={true}\n        visible={this.state.modalVisible}\n        onRequestClose={()=> this.setState({modalVisible: false})}\n        >\n       <TouchableOpacity activeOpacity={1} onPress={()=> this.setState({modalVisible: false})} style={{backgroundColor: 'rgba(0,0,0,0.4)', flex: 1, justifyContent: 'flex-end'}}>\n        <TouchableOpacity activeOpacity={1} style={{backgroundColor: '#fff', height: this.state.length*80, padding: 15, elevation: 4}}>\n          <Text style={{color: '#757575'}}>{this.state.title}</Text>\n          <List style={{marginHorizontal: -15, marginTop: 15}} dataArray={this.state.items} renderRow={(data, i, id) =>\n\n              { return (typeof this.state.items[0]==='string') ?\n               <ListItem onPress={()=> { this.state.callback(id); this.setState({modalVisible: false})}} style={{borderColor: 'transparent'}}>\n                <Text>{data}</Text>\n              </ListItem>\n              :\n              <ListItem onPress={()=> { this.state.callback(id); this.setState({modalVisible: false})}} style={{borderColor: 'transparent'}} icon>\n                <Left>\n                  <Icon name={data.icon} />\n                </Left>\n                <Body style={{borderColor: 'transparent'}}>\n                  <Text>{data.text}</Text>\n                </Body>\n                <Right />\n              </ListItem>}\n          } />\n      </TouchableOpacity>\n      </TouchableOpacity>\n      </Modal>\n    );\n  }\n}\n\nActionSheetContainer.propTypes = {\n  ...ViewPropTypes,\n  style: React.PropTypes.object,\n};\n\nconst StyledActionSheetContainer = connectStyle('NativeBase.ActionSheetContainer', {}, mapPropsToStyleNames)(ActionSheetContainer);\n\nexport {\n  StyledActionSheetContainer as ActionSheetContainer,\n};\n"]}